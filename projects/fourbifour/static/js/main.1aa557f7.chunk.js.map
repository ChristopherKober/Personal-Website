{"version":3,"sources":["components/Calendar/Calendar.js","common/Draft/DraftOrderSelection/DraftOrderSelectionOption/DraftOrderSelectionOption.js","common/Draft/DraftOrderSelection/DraftOrderSelection/DraftOrderSelection.js","common/Draft/DraftRoundItem/DraftRoundItem.js","common/Draft/DraftRound/DraftRound.js","common/Draft/DraftGrid/DraftGrid.js","common/Draft/DraftReview/DraftReview.js","common/Draft/Draft/Draft.js","config.js","components/PodcastForm/PodcastForm.js","common/AppContainer/AppContainer.js","App.js","serviceWorker.js","index.js"],"names":["Calendar","selectFilledInDays","date","view","props","podcasts","some","p","Date","parse","toDateString","dateChange","d","className","showNeighboringMonth","tileClassName","this","onChange","React","Component","DraftOrderSelectionOption","updateOrder","e","onOrderChange","parseInt","target","id","options","selectedIndex","value","selectId","data","shouldBeDefault","undefined","key","selected","map","index","DraftOrderSelection","v","i","DraftRoundItem","handleError","src","itemId","title","split","join","onError","height","width","type","name","onTextChange","DraftRound","order","roundNumber","DraftGrid","reversed","Array","from","reverse","DraftReview","onRankingChange","checked","Draft","people","imgPath","ranking","apiUrl","PodcastForm","handleSubmit","event","preventDefault","rushmore","childNodes","flushmore","rushmoreSelection","rushmoreDataGrid","rushmoreResult","find","n","flushmoreSelection","flushmoreDataGrid","flushmoreResult","rushmoreSelections","forEach","c","push","rushmoreData","tempArray","flushmoreSelections","flushmoreData","password","sendPodcastPost","rushSelect","rushData","rushResult","flushSelect","flushData","flushResult","requestOptions","method","headers","body","JSON","stringify","toLocaleDateString","mount_rushmore_select_order","mount_rushmore_select_data","mount_rushmore_ranking","mount_flushmore_select_order","mount_flushmore_select_data","mount_flushmore_ranking","fetch","concat","then","res","onSavedChange","ok","error","console","log","onSubmit","onOrderChangeRushmore","onTextChangeRushmore","onOrderChangeFlushmore","onTextChangeFlushmore","htmlFor","saved","AppContainer","state","loaded","selectedDate","setDate","setState","updateDataState","getPodcastInfo","setRushmoreOrder","newOrder","length","prev","setFlushmoreOrder","setRushmoreTextData","newData","newSubData","parentElement","j","setFlushmoreTextData","setWinner","winner","setSaved","podcast","mr_ranking","mr_selectData","mr_selectOrder","mf_ranking","mf_selectData","mf_selectOrder","json","result","podcastData","App","href","rel","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.1aa557f7.chunk.js","sourcesContent":["import React from 'react';\r\nimport './Calendar.scss'\r\n\r\nimport ReactCalendar from 'react-calendar'\r\n\r\nexport class Calendar extends React.Component {\r\n\r\n    selectFilledInDays = ({ date, view }) => {\r\n        if (view === \"month\") {\r\n            if (this.props.podcasts && this.props.podcasts.some((p) => new Date(Date.parse(p.date)).toDateString() === date.toDateString())) {\r\n                return 'podcastDay'\r\n            }\r\n        }\r\n    }\r\n\r\n    dateChange = (d) => {\r\n        this.props.dateChange(d);\r\n    }\r\n\r\n    render() {\r\n        return <div className=\"calendar\">\r\n            <h2>Select a date to start</h2>\r\n            <ReactCalendar showNeighboringMonth={false} tileClassName={this.selectFilledInDays} onChange={this.dateChange}/>\r\n        </div>;\r\n    }    \r\n}","import React from 'react';\r\nimport './DraftOrderSelectionOption.scss'\r\n\r\nexport class DraftOrderSelectionOption extends React.Component {\r\n\r\n    updateOrder = (e) => {\r\n        this.props.onOrderChange(parseInt(e.target.id),e.target.options[e.target.selectedIndex].value);\r\n    }\r\n\r\n    render() {\r\n        let {\r\n            selectId,\r\n            onOrderChange,\r\n            options,\r\n            data\r\n        } = this.props;\r\n\r\n        let shouldBeDefault = !! (data != \"Cam\" && data != \"Fred\" && data != \"PA\" && data != \"Mitch White\")\r\n\r\n        return <div className=\"draftorderselectionoption\">\r\n            {selectId !== undefined && <p>\r\n                {selectId+1 + \":\"}\r\n            </p>} \r\n            <select id={selectId} onChange={this.props.onOrderChange ? this.updateOrder : undefined} className=\"normal-select-1\">\r\n                {shouldBeDefault && <option key={-1} selected>-</option>}\r\n                {!shouldBeDefault && <option key={-1}>-</option>}\r\n                {\r\n                    options && options.map((value,index) => {\r\n                        var selected = !!(value == data)\r\n                        if (selected)\r\n                            return <option key={index} value={value} className=\"select-dropdown__list-item\" selected>{value}</option>\r\n                        else\r\n                            return <option key={index} value={value} className=\"select-dropdown__list-item\" >{value}</option>\r\n                    }, this)\r\n                }\r\n            </select>\r\n        </div>;\r\n    }    \r\n}","import React from 'react';\r\nimport './DraftOrderSelection.scss'\r\nimport { DraftOrderSelectionOption } from '../DraftOrderSelectionOption/DraftOrderSelectionOption';\r\n\r\nexport class DraftOrderSelection extends React.Component {\r\n\r\n    // updateOrder = (e) => {\r\n    //     this.props.onOrderChange(parseInt(e.target.id),e.target.options[e.target.selectedIndex].value);\r\n    // }\r\n\r\n    render() {\r\n        let {\r\n            options,\r\n            data\r\n        } = this.props;\r\n\r\n        return <div className=\"draftorderselection\">\r\n            {\r\n                options && options.map((v,i) => {\r\n                    return <DraftOrderSelectionOption selectId={i} onOrderChange={this.props.onOrderChange} options={options} key={i} data={data ? data[i] : undefined}/>\r\n                })\r\n            }\r\n        </div>;\r\n    }    \r\n}","import React from 'react';\r\nimport './DraftRoundItem.scss'\r\n\r\nexport class DraftRoundItem extends React.Component {\r\n\r\n    handleError = (e) => {\r\n        e.target.src = '/images/whiteImage.png'\r\n    }\r\n\r\n    render() {\r\n        let {\r\n            itemId,\r\n            title,\r\n            data\r\n        } = this.props;\r\n\r\n        return <div className=\"draftrounditem\">\r\n            {/*<label htmlFor=\"{itemId}\">{title}</label>*/}\r\n            <img src={'/images/' + title?.split(\" \").join(\"\") +'Flush.jpg'} onError={this.handleError} height=\"50\" width=\"50\"/>\r\n            <input type=\"text\" id={itemId} name={itemId} value={data} onChange={this.props.onTextChange}/>\r\n        </div>;\r\n    }    \r\n}","import React from 'react';\r\nimport './DraftRound.scss'\r\nimport { DraftRoundItem } from '../DraftRoundItem/DraftRoundItem';\r\n\r\nexport class DraftRound extends React.Component {\r\n    render() {\r\n        let {\r\n            order,\r\n            roundNumber,\r\n            data\r\n        } = this.props;\r\n\r\n        return <div className=\"draftround\" id={roundNumber}>\r\n            <p>Round {roundNumber}</p>\r\n            {\r\n                order && order.map((value,index) => {\r\n                    return <DraftRoundItem itemId={index} title={value} key={index} data={data ? data[index] : undefined} onTextChange={this.props.onTextChange}/>\r\n                })\r\n            }\r\n        </div>;\r\n    }    \r\n}","import React from 'react';\r\nimport './DraftGrid.scss'\r\nimport { DraftRound } from '../DraftRound/DraftRound';\r\n\r\nexport class DraftGrid extends React.Component {\r\n    render() {\r\n        let {\r\n            order,\r\n            data\r\n        } = this.props\r\n\r\n        if (!order) {\r\n            order = [undefined,undefined,undefined,undefined]\r\n        }\r\n        \r\n        let reversed = Array.from(order).reverse()\r\n\r\n        return <div className=\"draftgrid\">\r\n            <DraftRound order={order} roundNumber={1} data={data ? data[0] : undefined} onTextChange={this.props.onTextChange}/>\r\n            <DraftRound order={reversed} roundNumber={2} data={data ? data[1] : undefined} onTextChange={this.props.onTextChange}/>\r\n            <DraftRound order={order} roundNumber={3} data={data ? data[2] : undefined} onTextChange={this.props.onTextChange}/>\r\n            <DraftRound order={reversed} roundNumber={4} data={data ? data[3] : undefined} onTextChange={this.props.onTextChange}/>\r\n        </div>;\r\n    }    \r\n}","import React from 'react';\r\nimport './DraftReview.scss'\r\nimport { DraftOrderSelectionOption } from '../DraftOrderSelection/DraftOrderSelectionOption/DraftOrderSelectionOption';\r\n\r\nexport class DraftReview extends React.Component {\r\n    render() {\r\n        let {\r\n            options,\r\n            data,\r\n            name\r\n        } = this.props;\r\n\r\n        return <div className=\"draftreview\">\r\n            <h2>Winner</h2>\r\n            {/* <DraftOrderSelectionOption options={options} data={data ? data : undefined}/> */}\r\n            <div className=\"radio-box\" onChange={this.props.onRankingChange}>\r\n                { data == \"Fred\" && <input className=\"radio-btn\" type=\"radio\" name={name} id={\"Fred\"} checked/> }\r\n                { data != \"Fred\" && <input className=\"radio-btn\" type=\"radio\" name={name} id={\"Fred\"}/> }\r\n                <label className=\"radio-label\">Fred</label>\r\n                { data == \"Mitch White\" && <input className=\"radio-btn\" type=\"radio\" name={name} id={\"Mitch White\"} checked/> }\r\n                { data != \"Mitch White\" && <input className=\"radio-btn\" type=\"radio\" name={name} id={\"Mitch White\"}/> }\r\n                <label className=\"radio-label\">Mitch White</label>\r\n                { data == \"PA\" && <input className=\"radio-btn\" type=\"radio\" name={name} id={\"PA\"} checked/> }\r\n                { data != \"PA\" && <input className=\"radio-btn\" type=\"radio\" name={name} id={\"PA\"}/> }\r\n                <label className=\"radio-label\">PA</label>\r\n                { data == \"Cam\" && <input className=\"radio-btn\" type=\"radio\" name={name} id={\"Cam\"} checked/> }\r\n                { data != \"Cam\" && <input className=\"radio-btn\" type=\"radio\" name={name} id={\"Cam\"}/> }\r\n                <label className=\"radio-label\">Cam</label>\r\n                <span className=\"marker\"></span>\r\n            </div>\r\n        </div>;\r\n    }    \r\n}","import React from 'react';\r\nimport './Draft.scss'\r\nimport { DraftOrderSelection } from '../DraftOrderSelection/DraftOrderSelection/DraftOrderSelection';\r\nimport { DraftGrid } from '../DraftGrid/DraftGrid';\r\nimport { DraftReview } from '../DraftReview/DraftReview';\r\n\r\nexport class Draft extends React.Component {\r\n\r\n    render() {\r\n        let {\r\n            title,\r\n            people,\r\n            data,\r\n            imgPath\r\n        } = this.props;\r\n\r\n        return <div className=\"draft elementcontainer\">\r\n            <div>\r\n                <h2>{title ? title : \"Draft\"}</h2>\r\n                <img src={imgPath} height=\"500\"></img>\r\n            </div>\r\n            <h3>Select Order</h3>\r\n            <DraftOrderSelection options={people} onOrderChange={this.props.onOrderChange} data={data?.order}/>\r\n            <DraftGrid order={data?.order} data={data?.data} onTextChange={this.props.onTextChange}/>\r\n            <DraftReview options={people} data={data?.ranking} name={title} onRankingChange={this.props.onRankingChange}/>\r\n        </div>;\r\n    }    \r\n}","export const apiUrl = \"https://nyc-exploration.herokuapp.com/\";\r\nexport const getAllPodcastsEndpoint = \"fred\";\r\nexport const savePodcastEndpoint = \"fred\";","import React from 'react';\r\nimport './PodcastForm.scss'\r\n\r\nimport { Draft } from '../../common/Draft/Draft/Draft'\r\nimport { savePodcastEndpoint, apiUrl } from '../../config'\r\n\r\nexport class PodcastForm extends React.Component {\r\n\r\n    handleSubmit = (event) => {\r\n        event.preventDefault()\r\n        var rushmore = event.target.childNodes[0]\r\n        var flushmore = event.target.childNodes[1]\r\n\r\n        var rushmoreSelection = rushmore.childNodes[2]\r\n        var rushmoreDataGrid = rushmore.childNodes[3]\r\n        var rushmoreResult = Array.from(rushmore.childNodes[4].childNodes[1].childNodes).find(n => n.checked).id\r\n\r\n        var flushmoreSelection = flushmore.childNodes[2]\r\n        var flushmoreDataGrid = flushmore.childNodes[3]\r\n        var flushmoreResult = Array.from(flushmore.childNodes[4].childNodes[1].childNodes).find(n => n.checked).id\r\n\r\n        var rushmoreSelections= []\r\n        rushmoreSelection.childNodes.forEach(c => rushmoreSelections.push(c.childNodes[1].value))\r\n\r\n        var rushmoreData = []\r\n        rushmoreDataGrid.childNodes.forEach(c => {\r\n            var tempArray = []\r\n            var t = [c.childNodes[1], c.childNodes[2], c.childNodes[3], c.childNodes[4]]\r\n            t.forEach(d => tempArray.push(d.childNodes[1].value))\r\n            rushmoreData.push(tempArray)\r\n        })\r\n\r\n\r\n        var flushmoreSelections= []\r\n        flushmoreSelection.childNodes.forEach(c => flushmoreSelections.push(c.childNodes[1].value))\r\n\r\n        var flushmoreData = []\r\n        flushmoreDataGrid.childNodes.forEach(c => {\r\n            var tempArray = []\r\n            var t = [c.childNodes[1], c.childNodes[2], c.childNodes[3], c.childNodes[4]]\r\n            t.forEach(d => tempArray.push(d.childNodes[1].value))\r\n            flushmoreData.push(tempArray)\r\n        })\r\n\r\n\r\n        var finalObj = {\r\n            rmSelection: rushmoreSelections,\r\n            rmData: rushmoreData,\r\n            rmResult: rushmoreResult,\r\n            fmSelection: flushmoreSelections,\r\n            fmData: flushmoreData,\r\n            fmResult: flushmoreResult,\r\n        }\r\n\r\n        var password = event.target.childNodes[2].childNodes[1].value\r\n\r\n        this.sendPodcastPost(rushmoreSelections,rushmoreData,rushmoreResult,flushmoreSelections,flushmoreData,flushmoreResult,password,this.props.date)\r\n    }\r\n\r\n    sendPodcastPost = (rushSelect,rushData,rushResult,flushSelect,flushData,flushResult,password, date) => {\r\n        const requestOptions = {\r\n            method: 'POST',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: JSON.stringify({ \r\n                date: date.toLocaleDateString(),\r\n                mount_rushmore_select_order: JSON.stringify(rushSelect),\r\n                mount_rushmore_select_data: JSON.stringify(rushData),\r\n                mount_rushmore_ranking: JSON.stringify(rushResult),\r\n                mount_flushmore_select_order: JSON.stringify(flushSelect),\r\n                mount_flushmore_select_data: JSON.stringify(flushData),\r\n                mount_flushmore_ranking: JSON.stringify(flushResult),\r\n                password: password\r\n             })\r\n        };\r\n\r\n        // console.log({ \r\n        //     date: date.toLocaleDateString(),\r\n        //     mount_rushmore_select_order: JSON.stringify(rushSelect),\r\n        //     mount_rushmore_select_data: JSON.stringify(rushData),\r\n        //     mount_rushmore_ranking: JSON.stringify(rushResult),\r\n        //     mount_flushmore_select_order: JSON.stringify(flushSelect),\r\n        //     mount_flushmore_select_data: JSON.stringify(flushData),\r\n        //     mount_flushmore_ranking: JSON.stringify(flushResult),\r\n        //     password: password\r\n        //  }))\r\n\r\n        fetch(apiUrl.concat(savePodcastEndpoint), requestOptions)            \r\n        .then(res => {\r\n            this.props.onSavedChange(res.ok)\r\n        },\r\n        (error) => {\r\n            console.log(error);\r\n            this.props.onSavedChange(false)\r\n        })\r\n    }\r\n\r\n    render() {\r\n        let {\r\n            people\r\n        } = this.props;\r\n\r\n        return <div className=\"podcastform\">\r\n            <form onSubmit={this.handleSubmit}>\r\n                <Draft title=\"Mount Rushmore\" imgPath=\"/images/MountRushmore.jpg\" people={people} \r\n                                                                                  data={this.props.rushmoreData} \r\n                                                                                  onOrderChange={this.props.onOrderChangeRushmore}\r\n                                                                                  onTextChange={this.props.onTextChangeRushmore} \r\n                                                                                  onRankingChange={this.props.onRankingChange} />\r\n                <Draft title=\"Mount Flushmore\" imgPath=\"/images/MountFlushmore.jpg\" people={people} \r\n                                                                                    data={this.props.flushmoreData} \r\n                                                                                    onOrderChange={this.props.onOrderChangeFlushmore}\r\n                                                                                    onTextChange={this.props.onTextChangeFlushmore}\r\n                                                                                    onRankingChange={this.props.onRankingChange} />\r\n                <div className=\"elementcontainer passwordDiv\">\r\n                    <label htmlFor=\"pass\"><h3>Password</h3></label>\r\n                    <input type=\"password\" id=\"pass\" name=\"pass\"/>\r\n                    <input type=\"submit\" value=\"Save\"></input>\r\n                    {this.props.saved && <h4>Saved</h4>}\r\n                    {this.props.saved === false && <h4>Did not save</h4>}\r\n                </div>\r\n            </form>\r\n        </div>;\r\n    }    \r\n}","import React from 'react';\r\nimport './AppContainer.scss'\r\nimport { Calendar } from '../../components/Calendar/Calendar'\r\nimport { PodcastForm } from '../../components/PodcastForm/PodcastForm'\r\nimport { getAllPodcastsEndpoint, apiUrl } from '../../config'\r\n\r\nexport class AppContainer extends React.Component {\r\n\r\n    state = {\r\n        loaded: false,\r\n        error: false,\r\n        selectedDate: null,\r\n        data: undefined\r\n    }\r\n\r\n    setDate = (date) => {\r\n        this.setState({selectedDate: date});\r\n        this.updateDataState(this.getPodcastInfo(date))\r\n    }\r\n\r\n    updateDataState(podcast) {\r\n        if (podcast) {\r\n            this.setState({data: {\r\n                rushmoreData: {\r\n                    ranking: podcast.mr_ranking,\r\n                    data: podcast.mr_selectData,\r\n                    order: podcast.mr_selectOrder\r\n                },\r\n                flushmoreData: {\r\n                    ranking: podcast.mf_ranking,\r\n                    data: podcast.mf_selectData,\r\n                    order: podcast.mf_selectOrder\r\n                }\r\n            }})\r\n        } else {\r\n            this.setState({data: {\r\n                rushmoreData: {\r\n                    ranking: undefined,\r\n                    data: [ [\"\",\"\",\"\",\"\"],\r\n                            [\"\",\"\",\"\",\"\"],\r\n                            [\"\",\"\",\"\",\"\"],\r\n                            [\"\",\"\",\"\",\"\"] ],\r\n                    order: [undefined,undefined,undefined,undefined]\r\n                },\r\n                flushmoreData: {\r\n                    ranking: undefined,\r\n                    data: [ [undefined,undefined,undefined,undefined],\r\n                            [undefined,undefined,undefined,undefined],\r\n                            [undefined,undefined,undefined,undefined],\r\n                            [undefined,undefined,undefined,undefined] ],\r\n                    order: [undefined,undefined,undefined,undefined]\r\n                }\r\n            }})\r\n        }\r\n\r\n        this.setState({saved:undefined})\r\n    }\r\n\r\n    componentDidMount() {\r\n        fetch(apiUrl + getAllPodcastsEndpoint)\r\n            .then(res => {\r\n                var x = res.json();\r\n                return x\r\n            })\r\n            .then(\r\n            (result) => {\r\n                var podcastData = result.map(p => {\r\n                    return {\r\n                        id: p.id,\r\n                        date: new Date(Date.parse(p.date) + 79200000),\r\n                        mr_selectOrder: JSON.parse(p.mr_selectOrder),\r\n                        mr_selectData: JSON.parse(p.mr_selectData),\r\n                        mr_ranking: JSON.parse(p.mr_ranking),\r\n                        mf_selectOrder: JSON.parse(p.mf_selectOrder),\r\n                        mf_selectData: JSON.parse(p.mf_selectData),\r\n                        mf_ranking: JSON.parse(p.mf_ranking)\r\n                    }\r\n                })\r\n\r\n                this.setState({podcasts:podcastData});\r\n                this.setState({loaded:true});\r\n            },\r\n            // Note: it's important to handle errors here\r\n            // instead of a catch() block so that we don't swallow\r\n            // exceptions from actual bugs in components.\r\n            (error) => {\r\n                console.log(error);\r\n                this.setState({error:true});\r\n            }\r\n        )\r\n    }\r\n\r\n    getPodcastInfo = (date) => {\r\n        if (this.state.podcasts) {\r\n            return this.state.podcasts.find((p) => new Date(Date.parse(p.date)).toDateString() === date.toDateString());\r\n        }\r\n    }\r\n\r\n    setRushmoreOrder = (index,value) => {\r\n        if (value === \"-\") {\r\n            value = undefined;\r\n        }\r\n        let newOrder = [];\r\n\r\n        for (var i = 0; i < this.state.data.rushmoreData.order?.length;i++) {\r\n            if (i === index) {\r\n                newOrder.push(value);\r\n            } else {\r\n                newOrder.push(this.state.data.rushmoreData.order[i]);\r\n            }\r\n        }\r\n\r\n        this.setState(prev => ({\r\n            ...prev,\r\n            data: {\r\n                ...prev.data,\r\n                rushmoreData: {\r\n                    ...prev.data.rushmoreData,\r\n                    order: newOrder\r\n                }\r\n            }\r\n        }));\r\n    }\r\n\r\n    setFlushmoreOrder = (index,value) => {\r\n        if (value === \"-\") {\r\n            value = undefined;\r\n        }\r\n        let newOrder = [];\r\n\r\n        for (var i = 0; i < this.state.data.flushmoreData.order?.length;i++) {\r\n            if (i === index) {\r\n                newOrder.push(value);\r\n            } else {\r\n                newOrder.push(this.state.data.flushmoreData.order[i]);\r\n            }\r\n        }\r\n\r\n        this.setState(prev => ({\r\n            ...prev,\r\n            data: {\r\n                ...prev.data,\r\n                flushmoreData: {\r\n                    ...prev.data.flushmoreData,\r\n                    order: newOrder\r\n                }\r\n            }\r\n        }));\r\n    }\r\n\r\n    setRushmoreTextData = (e) => {\r\n\r\n        var newData = []\r\n\r\n        for (var i = 0; i < this.state.data.rushmoreData.data.length; i++) {\r\n            var newSubData = []\r\n            if (i + 1 == e.target.parentElement.parentElement.id) {\r\n                for (var j = 0; j < this.state.data.rushmoreData.data[i].length; j++) {\r\n                    if (j == e.target.id) {\r\n                        newSubData.push(e.target.value)\r\n                    } else {\r\n                        newSubData.push(this.state.data.rushmoreData.data[i][j])\r\n                    }\r\n                }\r\n            } else {\r\n                newSubData = [...this.state.data.rushmoreData.data[i]]\r\n            }\r\n\r\n            newData.push(newSubData)\r\n        }\r\n\r\n        this.setState(prev => ({\r\n            ...prev,\r\n            data: {\r\n                ...prev.data,\r\n                rushmoreData: {\r\n                    ...prev.data.rushmoreData,\r\n                    data: newData\r\n                }\r\n            }\r\n        }));\r\n    }\r\n\r\n    setFlushmoreTextData = (e) => {\r\n        var newData = []\r\n\r\n        for (var i = 0; i < this.state.data.flushmoreData.data.length; i++) {\r\n            var newSubData = []\r\n            if (i + 1 == e.target.parentElement.parentElement.id) {\r\n                for (var j = 0; j < this.state.data.flushmoreData.data[i].length; j++) {\r\n                    if (j == e.target.id) {\r\n                        newSubData.push(e.target.value)\r\n                    } else {\r\n                        newSubData.push(this.state.data.flushmoreData.data[i][j])\r\n                    }\r\n                }\r\n            } else {\r\n                newSubData = [...this.state.data.flushmoreData.data[i]]\r\n            }\r\n\r\n            newData.push(newSubData)\r\n        }\r\n\r\n        this.setState(prev => ({\r\n            ...prev,\r\n            data: {\r\n                ...prev.data,\r\n                flushmoreData: {\r\n                    ...prev.data.flushmoreData,\r\n                    data: newData\r\n                }\r\n            }\r\n        }));\r\n    }\r\n\r\n    setWinner = (e) => {\r\n        var winner = e.target.id\r\n\r\n        if (e.target.name == \"Mount Rushmore\") {\r\n            this.setState(prev => ({\r\n                ...prev,\r\n                data: {\r\n                    ...prev.data,\r\n                    rushmoreData: {\r\n                        ...prev.data.rushmoreData,\r\n                        ranking: winner\r\n                    }\r\n                }\r\n            }));\r\n        }\r\n\r\n        if (e.target.name == \"Mount Flushmore\") {\r\n            this.setState(prev => ({\r\n                ...prev,\r\n                data: {\r\n                    ...prev.data,\r\n                    flushmoreData: {\r\n                        ...prev.data.flushmoreData,\r\n                        ranking: winner\r\n                    }\r\n                }\r\n            }));\r\n        }\r\n    }\r\n\r\n    setSaved = (saved) => {\r\n        this.setState({saved:saved})\r\n    }\r\n\r\n    render() {\r\n\r\n        console.log(this.state)\r\n\r\n        return <div className=\"appcontainer\">\r\n            <div className=\"elementcontainer\"> \r\n                <h1>Four Bi Four Podcast</h1>\r\n                <img src=\"/images/4by4car.jpg\"  height=\"300\"/>\r\n                <img src=\"/images/4by4wood.jpg\"  height=\"300\"/>\r\n                { this.state.loaded && <Calendar podcasts={this.state.podcasts} dateChange={this.setDate}/> }\r\n            </div>\r\n            { this.state.selectedDate && <PodcastForm people={['Fred','PA','Cam','Mitch White']} \r\n                                                      rushmoreData={this.state.data.rushmoreData}\r\n                                                      onOrderChangeRushmore={this.setRushmoreOrder}\r\n                                                      onTextChangeRushmore={this.setRushmoreTextData} \r\n                                                      flushmoreData={this.state.data.flushmoreData}\r\n                                                      onOrderChangeFlushmore={this.setFlushmoreOrder}\r\n                                                      onTextChangeFlushmore={this.setFlushmoreTextData} \r\n                                                      date={this.state.selectedDate}\r\n                                                      onRankingChange={this.setWinner}\r\n                                                      onSavedChange={this.setSaved}\r\n                                                      saved={this.state.saved}/>}\r\n            { this.state.error && <h3>Error. Damn, damn, damn...</h3> }\r\n        </div>;\r\n    }    \r\n}","import React from 'react';\nimport './App.css';\nimport {AppContainer} from './common/AppContainer/AppContainer';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <link href=\"https://fonts.googleapis.com/css2?family=Roboto:wght@300&display=swap\" rel=\"stylesheet\"/>\n      <AppContainer/>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}